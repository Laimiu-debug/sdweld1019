2025-10-18 03:46:16,258 - __main__ - INFO - 开始处理已过期的订阅...
2025-10-18 03:46:16,404 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2025-10-18 03:46:16,405 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-18 03:46:16,405 - sqlalchemy.engine.Engine - INFO - select current_schema()
2025-10-18 03:46:16,405 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-18 03:46:16,406 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2025-10-18 03:46:16,406 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-18 03:46:16,406 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-18 03:46:16,408 - sqlalchemy.engine.Engine - INFO - SELECT subscriptions.id AS subscriptions_id, subscriptions.user_id AS subscriptions_user_id, subscriptions.plan_id AS subscriptions_plan_id, subscriptions.status AS subscriptions_status, subscriptions.billing_cycle AS subscriptions_billing_cycle, subscriptions.price AS subscriptions_price, subscriptions.currency AS subscriptions_currency, subscriptions.start_date AS subscriptions_start_date, subscriptions.end_date AS subscriptions_end_date, subscriptions.trial_end_date AS subscriptions_trial_end_date, subscriptions.auto_renew AS subscriptions_auto_renew, subscriptions.payment_method AS subscriptions_payment_method, subscriptions.last_payment_date AS subscriptions_last_payment_date, subscriptions.next_billing_date AS subscriptions_next_billing_date, subscriptions.created_at AS subscriptions_created_at, subscriptions.updated_at AS subscriptions_updated_at 
FROM subscriptions JOIN users ON users.id = subscriptions.user_id 
WHERE subscriptions.end_date < %(end_date_1)s AND subscriptions.status = %(status_1)s
2025-10-18 03:46:16,408 - sqlalchemy.engine.Engine - INFO - [generated in 0.00036s] {'end_date_1': datetime.datetime(2025, 10, 17, 19, 46, 16, 267836), 'status_1': 'active'}
2025-10-18 03:46:16,412 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-18 03:46:16,412 - __main__ - INFO - 处理了 0 个已过期的订阅
2025-10-18 03:46:52,658 - __main__ - INFO - 开始处理已过期的订阅...
2025-10-18 03:46:52,704 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2025-10-18 03:46:52,704 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-18 03:46:52,705 - sqlalchemy.engine.Engine - INFO - select current_schema()
2025-10-18 03:46:52,705 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-18 03:46:52,705 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2025-10-18 03:46:52,705 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-18 03:46:52,705 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-18 03:46:52,707 - sqlalchemy.engine.Engine - INFO - SELECT subscriptions.id AS subscriptions_id, subscriptions.user_id AS subscriptions_user_id, subscriptions.plan_id AS subscriptions_plan_id, subscriptions.status AS subscriptions_status, subscriptions.billing_cycle AS subscriptions_billing_cycle, subscriptions.price AS subscriptions_price, subscriptions.currency AS subscriptions_currency, subscriptions.start_date AS subscriptions_start_date, subscriptions.end_date AS subscriptions_end_date, subscriptions.trial_end_date AS subscriptions_trial_end_date, subscriptions.auto_renew AS subscriptions_auto_renew, subscriptions.payment_method AS subscriptions_payment_method, subscriptions.last_payment_date AS subscriptions_last_payment_date, subscriptions.next_billing_date AS subscriptions_next_billing_date, subscriptions.created_at AS subscriptions_created_at, subscriptions.updated_at AS subscriptions_updated_at 
FROM subscriptions JOIN users ON users.id = subscriptions.user_id 
WHERE subscriptions.end_date < %(end_date_1)s AND subscriptions.status = %(status_1)s
2025-10-18 03:46:52,707 - sqlalchemy.engine.Engine - INFO - [generated in 0.00012s] {'end_date_1': datetime.datetime(2025, 10, 17, 19, 46, 52, 667086), 'status_1': 'active'}
2025-10-18 03:46:52,710 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-18 03:46:52,710 - __main__ - INFO - 处理了 0 个已过期的订阅
2025-10-18 03:48:37,972 - __main__ - INFO - 开始处理已过期的订阅...
2025-10-18 03:48:38,018 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2025-10-18 03:48:38,018 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-18 03:48:38,019 - sqlalchemy.engine.Engine - INFO - select current_schema()
2025-10-18 03:48:38,019 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-18 03:48:38,019 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2025-10-18 03:48:38,019 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-18 03:48:38,019 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-18 03:48:38,021 - sqlalchemy.engine.Engine - INFO - SELECT subscriptions.id AS subscriptions_id, subscriptions.user_id AS subscriptions_user_id, subscriptions.plan_id AS subscriptions_plan_id, subscriptions.status AS subscriptions_status, subscriptions.billing_cycle AS subscriptions_billing_cycle, subscriptions.price AS subscriptions_price, subscriptions.currency AS subscriptions_currency, subscriptions.start_date AS subscriptions_start_date, subscriptions.end_date AS subscriptions_end_date, subscriptions.trial_end_date AS subscriptions_trial_end_date, subscriptions.auto_renew AS subscriptions_auto_renew, subscriptions.payment_method AS subscriptions_payment_method, subscriptions.last_payment_date AS subscriptions_last_payment_date, subscriptions.next_billing_date AS subscriptions_next_billing_date, subscriptions.created_at AS subscriptions_created_at, subscriptions.updated_at AS subscriptions_updated_at 
FROM subscriptions JOIN users ON users.id = subscriptions.user_id 
WHERE subscriptions.end_date < %(end_date_1)s AND subscriptions.status = %(status_1)s
2025-10-18 03:48:38,021 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] {'end_date_1': datetime.datetime(2025, 10, 17, 19, 48, 37, 981768), 'status_1': 'active'}
2025-10-18 03:48:38,026 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.username AS users_username, users.contact AS users_contact, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.phone AS users_phone, users.company AS users_company, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.is_superuser AS users_is_superuser, users.is_admin AS users_is_admin, users.member_tier AS users_member_tier, users.membership_type AS users_membership_type, users.subscription_status AS users_subscription_status, users.subscription_start_date AS users_subscription_start_date, users.subscription_end_date AS users_subscription_end_date, users.subscription_expires_at AS users_subscription_expires_at, users.auto_renewal AS users_auto_renewal, users.wps_quota_used AS users_wps_quota_used, users.pqr_quota_used AS users_pqr_quota_used, users.ppqr_quota_used AS users_ppqr_quota_used, users.storage_quota_used AS users_storage_quota_used, users.permissions AS users_permissions, users.last_login_at AS users_last_login_at, users.last_login_ip AS users_last_login_ip, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.id = %(pk_1)s
2025-10-18 03:48:38,026 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] {'pk_1': 41}
2025-10-18 03:48:38,027 - sqlalchemy.engine.Engine - INFO - SELECT subscriptions.id AS subscriptions_id, subscriptions.user_id AS subscriptions_user_id, subscriptions.plan_id AS subscriptions_plan_id, subscriptions.status AS subscriptions_status, subscriptions.billing_cycle AS subscriptions_billing_cycle, subscriptions.price AS subscriptions_price, subscriptions.currency AS subscriptions_currency, subscriptions.start_date AS subscriptions_start_date, subscriptions.end_date AS subscriptions_end_date, subscriptions.trial_end_date AS subscriptions_trial_end_date, subscriptions.auto_renew AS subscriptions_auto_renew, subscriptions.payment_method AS subscriptions_payment_method, subscriptions.last_payment_date AS subscriptions_last_payment_date, subscriptions.next_billing_date AS subscriptions_next_billing_date, subscriptions.created_at AS subscriptions_created_at, subscriptions.updated_at AS subscriptions_updated_at 
FROM subscriptions 
WHERE subscriptions.id = %(id_1)s 
 LIMIT %(param_1)s
2025-10-18 03:48:38,027 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] {'id_1': 1, 'param_1': 1}
2025-10-18 03:48:38,028 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.username AS users_username, users.contact AS users_contact, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.phone AS users_phone, users.company AS users_company, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.is_superuser AS users_is_superuser, users.is_admin AS users_is_admin, users.member_tier AS users_member_tier, users.membership_type AS users_membership_type, users.subscription_status AS users_subscription_status, users.subscription_start_date AS users_subscription_start_date, users.subscription_end_date AS users_subscription_end_date, users.subscription_expires_at AS users_subscription_expires_at, users.auto_renewal AS users_auto_renewal, users.wps_quota_used AS users_wps_quota_used, users.pqr_quota_used AS users_pqr_quota_used, users.ppqr_quota_used AS users_ppqr_quota_used, users.storage_quota_used AS users_storage_quota_used, users.permissions AS users_permissions, users.last_login_at AS users_last_login_at, users.last_login_ip AS users_last_login_ip, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.id = %(id_1)s 
 LIMIT %(param_1)s
2025-10-18 03:48:38,028 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] {'id_1': 41, 'param_1': 1}
2025-10-18 03:48:38,029 - sqlalchemy.engine.Engine - INFO - UPDATE users SET member_tier=%(member_tier)s, subscription_status=%(subscription_status)s, subscription_end_date=%(subscription_end_date)s, updated_at=%(updated_at)s WHERE users.id = %(users_id)s
2025-10-18 03:48:38,029 - sqlalchemy.engine.Engine - INFO - [generated in 0.00010s] {'member_tier': 'personal_free', 'subscription_status': 'expired', 'subscription_end_date': None, 'updated_at': datetime.datetime(2025, 10, 17, 19, 48, 38, 28634), 'users_id': 41}
2025-10-18 03:48:38,030 - sqlalchemy.engine.Engine - INFO - UPDATE subscriptions SET status=%(status)s, updated_at=%(updated_at)s WHERE subscriptions.id = %(subscriptions_id)s
2025-10-18 03:48:38,030 - sqlalchemy.engine.Engine - INFO - [generated in 0.00012s] {'status': 'expired', 'updated_at': datetime.datetime(2025, 10, 17, 19, 48, 38, 30336), 'subscriptions_id': 1}
2025-10-18 03:48:38,031 - sqlalchemy.engine.Engine - INFO - INSERT INTO system_announcements (title, content, announcement_type, priority, is_published, is_pinned, target_audience, publish_at, expire_at, view_count, created_at, updated_at, created_by, updated_by) VALUES (%(title)s, %(content)s, %(announcement_type)s, %(priority)s, %(is_published)s, %(is_pinned)s, %(target_audience)s, %(publish_at)s, %(expire_at)s, %(view_count)s, %(created_at)s, %(updated_at)s, %(created_by)s, %(updated_by)s) RETURNING system_announcements.id
2025-10-18 03:48:38,031 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] {'title': '订阅已过期', 'content': '您的订阅已过期，部分功能可能受限。请升级订阅以继续使用全部功能。', 'announcement_type': 'info', 'priority': 'normal', 'is_published': False, 'is_pinned': False, 'target_audience': 'user', 'publish_at': datetime.datetime(2025, 10, 17, 19, 48, 38, 28637), 'expire_at': datetime.datetime(2025, 11, 16, 19, 48, 38, 28638), 'view_count': 0, 'created_at': datetime.datetime(2025, 10, 17, 19, 48, 38, 31462), 'updated_at': datetime.datetime(2025, 10, 17, 19, 48, 38, 31463), 'created_by': 41, 'updated_by': None}
2025-10-18 03:48:38,033 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-18 03:48:38,033 - __main__ - INFO - 处理了 1 个已过期的订阅
